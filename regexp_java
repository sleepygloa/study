java.util.regex 패키지에 있는Match 클래스와 Pattern 클래스를 이용하여 문자열을 정규검증식으로 나타낼 수 있습니다.
 
boolean flag = Pattern.matches("^[a-zA-Z0-9]*$", strInput); 
 정규표현식의 내용은 다음을 의미합니다.
 
1) ^ : 문자열의 시작
2) $ : 문자열의 종료
3) . : 임의의 한 문자 (문자의 종류와 관계없음)
4) | : or의 의미임
5) ? : 앞 문자가 없거나 하나 있을때
6) + : 앞 문자가 하나 이상임 (최소 한개 이상)
7) * : 앞 문자가 없을 수도 있고, 무한정 많을 수도 있음
8) [] : 문자 클래스의 지정, 문자의 집합이나 범위를 나태내면 - 기호를 사용한다. [] 내에서 ^를 사용하면 not의 의미임
9) {} : 횟수나 범위를 나타냄. 예를 들어 k{5}의 경우 k가 5번 반복되는 경우임, a{3,5}는 a가 3번 이상 5번 이하 반복되는 경우임
10) \w : 알파벳이나 숫자
11) \W : \w의 not. 즉 알파벳이나 숫자를 제외한 문자
12) \d : [0-9]와 동일
13) \D : 숫자를 제외한 모든 문자
 
기본적인 정규 표현식과 그 예를 모아보면 다음과 같습니다.
 
1) 숫자만 : ^[0-9]*$
2) 영문자만 : ^[a-zA-Z]*$
3) 한글만 : ^[가-힣]*$
4) 영어 & 숫자만 : ^[a-zA-Z0-9]*$
5) E-Mail : ^[a-zA-Z0-9]+@[a-zA-Z0-9]+$
6) 휴대폰 : ^01(?:0|1|[6-9]) - (?:\d{3}|\d{4}) - \d{4}$
7) 일반전화 : ^\d{2.3} - \d{3,4} - \d{4}$
8) 주민등록번호 : \d{6} \- [1-4]\d{6}
9) IP 주소 : ([0-9]{1,3}) \. ([0-9]{1,3}) \. ([0-9]{1,3}) \. ([0-9]{1,3})
 
이외에 자주 써먹는 정규식을 계속 모아야겠네요. ^^

2017년 2월 추가

최근 들어 자주 쓰게되는 정규식을 추가해 봅니다.

1) 라인 확인 : 라인에 tab이 있거나, 스페이스로 띄워져 있으나 문자열이 없는 경우 : (?m)^[ \t]*\r?\n
    (빈칸이 생성되었을 때 지울때 편합니다.)
2) 개인통관고유부호 : 맨 앞이 p로 시작하는 12자리 숫자 또는 순수하게 13자리 숫자인 경우 : ^(p|P)[0-9]{12} 또는 ^[0-9]{13} 으로 판단

2017년 7월 추가

예전에 정리해던 것인데 그 패턴에 하나 더 있어서 추가해 봅니다. 

http://blog.naver.com/admass/50177056858

HTML 태그 삭제를 위한 Java 정규식 표현
* Pattern String noHTMLString = htmlString.replaceAll("\\<.*?\\>", ""); * 예제 Strin...
blog.naver.com

HTML 삭제를 위한 패턴입니다.

* Pattern 

String noHTMLString = htmlString.replaceAll("\\<.*?\\>", "");

* 예제
 
String regex1 = "\\<.*?\\>";
String regex2 = "<(/)?([a-zA-Z]*)(\\s[a-zA-Z]*=[^>]*)?(\\s)*(/)?>";
String html = "가<aaa>나</bbb>다<ccc/>라<한글>마<ddd >바< eee >사< img src=\"한글\" >아\n";
System.out.println(html.replaceAll(regex1, ""));
System.out.println(html.replaceAll(regex2, ""));

==== 실행결과 ======
가나다라마바사아
가나다라<한글>마바< eee >사< img src="한글" >아

그리고, () 안에 있는 정보를 변경하기 위한 패턴입니다.

* Pattern 

 "\\(.*?\\)"

* Example

String sample = "STR(sss)";

sample = sample.replaceAll("\\(.*?\\)", "(kk)");
System.out.println(sample);

* 결과

STR(kk)
