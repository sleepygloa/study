jobtype <- 'A'
if(jobtype == 'A'){
bonus <- 200
}
print(jobtype)
print(bonus)
rm(jobtype)
rm(bonus)
jobtype <- 'A'
if(jobtype == 'B'){
bonus <- 200
}
print(bonus)
if(jobtype == 'B'){
bonus <- 200
}
else{
bonus <- 100
}
if(jobtype == 'B'){
bonus <- 200
} else {
bonus <- 100
}
print(bonus)
score <- 85
if(score > 90){
grade <- 'A'
}else if(score > 80){
grade <- 'B'
}else if(score > 70){
grade <- 'C'
}else if(score > 60){
grade <- 'D'
}else{
grade <- 'F'
}
print(grade)
score <- 60
if(score > 90){
grade <- 'A'
}else if(score > 80){
grade <- 'B'
}else if(score > 70){
grade <- 'C'
}else if(score > 60){
grade <- 'D'
}else{
grade <- 'F'
}
print(grade)
rm(grade)
if(score > 90){
grade <- 'A'
}else if(score > 80){
grade <- 'B'
}else if(score > 70){
grade <- 'C'
}else if(score > 60){
grade <- 'D'
}
if(score > 90){
grade <- 'A'
}else if(score > 80){
grade <- 'B'
}else if(score > 70){
grade <- 'C'
}else if(score > 60){
grade <- 'D'
}else{
grade <- 'F'
}
print(grade)
a <- 10
b <- 20
if((a>5) & (b>5)){
print(a+b)
}
if((a>5) | (b>30)){
print(a*b)
}
if(a>b){
c <- a
}else{
c <- b
}
print(c)
c <- ifelse(a>b,a,b)
print(c)
c <- ifelse(a<b,a,b)
print(c)
for(i in 1:5){
print('*')
}
for(i in 1:10){
print(i)
}
print(1)
print(2)
print(3)
print(4)
for(i in 1:9){
cat('2 *')
}
for(i in 1:9){
cat('2 *', i, '=')
}
for(i in 1:9){
cat('2 *', i, '=', 2*i, '\n')
}
for(i in 1:9){
cat("2 *", i, "=", 2*i, "\n")
}
c <- 20
cat("c의 값은 ", c , "\n")
for(i in 1:20){
# 짝수인지 확인
if((i%%2) == 0){
cat("1~20까지의 짝수 : " + i , " ")
}
}
for(i in 1:20){
# 짝수인지 확인
if((i%%2) == 0){
cat("1~20까지의 짝수 : " ,i , " ")
}
}
for(i in 1:20){
# 짝수인지 확인
if((i%%2) == 0){
cat("1~20까지의 짝수 : " ,i , "\n")
}
}
for(i in 1:20){
# 짝수인지 확인
if((i%%2) != 0){
cat("1~20까지의 짝수 : " ,i , "\n")
}
}
sum <- 0
for(i in 1:100){
sum <- sum + i
}
cat("1~100누적값 : ", sum)
for(i in 1:1000){
sum <- sum + i
}
cat("1~100누적값 : ", sum)
iris
head(iris)
nrow(iris)
num <- nrow(iris)
mylabel <- c()
mylabel
for(i in 1:num){
# 꽃잎의 길이에 따라 레이블 결정
if(iris$Petal.Length[i] <= 1.6){
mylabel[i] <- 'L'
}else if(iris$Petal.Length >= 5.1){
mylabel[i] <- 'H'
}else{
mylabel[i] <- 'M'
}
}
mylabel
df_new_iris <- data.frame(iris$Petal.Length, mylabel)
class(df_new_iris)
head(df_new_iris)
for(i in 1:num){
# 꽃잎의 길이에 따라 레이블 결정
if(iris$Petal.Length[i] <= 1.6){
mylabel[i] <- 'L'
}else if(iris$Petal.Length[i] >= 5.1){
mylabel[i] <- 'H'
}else{
mylabel[i] <- 'M'
}
}
mylabel
df_new_iris <- data.frame(iris$Petal.Length, mylabel)
head(df_new_iris)
sum <- 0
while (i<=100) {
sum <- sum + i  # 값 누적하기
i <- i + 1
}
print(sum)
while (i<=100) {
sum <- sum + i  # 값 누적하기
i <- i + 1
}
print(sum)
i <- 1
while (i<=100) {
sum <- sum + i  # 값 누적하기
i <- i + 1
}
print(sum)
i <- 1
while (i<=100) {
sum <- sum + i  # 값 누적하기
#  i <- i + 1
}
sum <- 0
i <- 1
while (i<=100) {
sum <- sum + i  # 값 누적하기
#  i <- i + 1
}
i <- 1
sum <- 0
while (i<=100) {
sum <- sum + i  # 값 누적하기
i <- i + 1
}
print(sum)
sum <- 0
for(i in 1:10){
sum <- sum + i
if(i>=5)
break
}
print(sum)
sum <- 0
sum <- 0
for(i in 1:10){
if(i%%2 == 0){
next
}
# 홀수만 더하는 형태
sum <- sum + i
}
print(sum)
for(i in 1:10){
if(i%%2 != 0){
next
}
# 홀수만 더하는 형태
sum <- sum + i
}
print(sum)
sum <- 0
for(i in 1:10){
if(i%%2 != 0){
next
}
# 홀수만 더하는 형태
sum <- sum + i
}
print(sum)
score <- c(76,84,69,50,95,60,82,71,88,84)
score[1]
for(i in length(c)){
score[i]
}
length(c)
length(c)
length(score)
for(i in length(score)){
score[i]
}
for(i in length(score)){
print(score[i])
}
for(i in 1:length(score)){
print(score[i])
}
for(i in length(c)){
score[i]
}
length(score)
for(i in 1:length(score)){
score[i]
}
for(i in 1:length(score)){
print(score[i])
}
for(i in 1:length(score)){
if(score[i] == 69){
idx <- i
break
}
print(score[i])
}
idx
which(score == 69)
idx <- which(score == 69)
idx
idx <- which(score>=85)
idx
class(idx)
idx
max(score)
which.max(score)
min(score)
which.min(score)
idx <- which(score<=60)
idx
score[idx] <- 61
score
score[c(4,6)] <- 1000
score
score[idx] <- 61
score
idx <- which(score>=80)
idx
highscore <- score[idx]
highscore
idx <- which(iris$Petal.Length>5.0)
idx
length(idx)
irisbig <- iris[idx]
irisbig <- iris[idx,]
irisbig
idx <- which(iris[,1:4]>5.0)
idx
idx <- which(iris[,1:4]>5.0, arr.ind = TRUE)
idx
idx <- which(iris[,1:4]>10.0, arr.ind = TRUE)
idx
idx <- which(iris[,1:4]>1.0, arr.ind = TRUE)
idx
dim(dix)
dim(idx)
idx <- which(iris[,1:4]>5.0, arr.ind = TRUE)
dim(idx)
